RE_SAVEASSIGNATTRIBUTESTOSUBRULE_DELETE=delete from RE_SUBRULE_ATTR_MAPPING  where SUBRULE_ID \=\:subruleId and ATTR_ID IN (\:attrIds) 
RE_SAVEASSIGNATTRIBUTESTOSUBRULE_INSERT=insert into RE_SUBRULE_ATTR_MAPPING values(SUBRULE_ATTR_MAPPING_PK_SQ.NEXTVAL,?,?)
RE_ATTRIBUTENAMESUSEDINSUBRULELOGIC_SELECT=	select atr.ATTR_NAME  from RE_SUBRULE_ATTR_MAPPING sam join RE_SUBRULE_LOGIC sl  on sl.SUBRULE_ATTR_ID=sam.SUBRULE_ATTR_ID  and sl.SUBRULE_ID=sam.SUBRULE_ID  join RE_OBECT_ATTR atr on sam.ATTR_ID=atr.ATTR_ID  where sam.SUBRULE_ID=:subruleId and sam.ATTR_ID IN (:attributeIds)
RE_FETCHSUBRULENAMES_SELECT=	select s.SUBRULE_NAME    from RE_SUBRULE s join RE_SUBRULE_ATTR_MAPPING sa    on s.SUBRULE_ID=sa.SUBRULE_ID    where sa.ATTR_ID=?
RE_GETPACUSER_SELECT	=select USER_ID,ACTIVE,ENABLE_DATE,DISABLE_DATE,ISADMIN,PASSWORD from USER_ADMIN where ACTIVE=1 and USER_ID=? and  TO_DATE (SYSDATE, 'DD-MM-YYYY') between TO_DATE( ENABLE_DATE, 'DD-MM-YYYY')  and TO_DATE( DISABLE_DATE, 'DD-MM-YYYY')
RE_INSERTINTOOPERATOR_INSERT=	INSERT INTO RE_OPERATOR(OPERATOR_ID,OPERATOR_NAME,OPERATOR_VALUE) VALUES(PROPERTY_OPERATOR_LIST_PK_SQ.NEXTVAL,?,?)
RE_UPDATEOPERATOR_UPDATE=	UPDATE RE_OPERATOR SET OPERATOR_NAME=?,OPERATOR_VALUE=? WHERE OPERATOR_ID=?
RE_DELETEOPERATOR_DELETE=	DELETE FROM RE_OPERATOR WHERE OPERATOR_ID=?
RE_FETCHALLOPERATORS_SELECT=	SELECT OPERATOR_ID,OPERATOR_NAME,OPERATOR_VALUE FROM RE_OPERATOR order by OPERATOR_NAME asc
RE_FETCHOPERATOR_SELECT	= SELECT OPERATOR_ID,OPERATOR_NAME,OPERATOR_VALUE FROM RE_OPERATOR WHERE OPERATOR_ID=?
RE_FETCHRULEOPERATORMAPPINGFORRULE_SELECT=	select rom.RULES_OPERATOR_ID,rom.RULE_ID,rom.OPERATOR_ID,ropr.OPERATOR_NAME,ropr.OPERATOR_VALUE from     RE_RULES_OPR_MAPPING rom join RE_OPERATOR ropr      on rom.OPERATOR_ID = ropr.OPERATOR_ID  where rom.RULE_ID =?
RE_FETCHOPERATORSALLOWEDFORRULE_SELECT=	select rom.OPERATOR_ID,ropr.OPERATOR_NAME,ropr.OPERATOR_VALUE from RE_RULES_OPR_MAPPING rom join RE_OPERATOR ropr on rom.OPERATOR_ID = ropr.OPERATOR_ID  where rom.RULE_ID =?
RE_SAVEASSIGNOPERATORSTORULE_DELETE=	delete from RE_RULES_OPR_MAPPING rom where rom.RULE_ID=:ruleId and rom.OPERATOR_ID in (:operatorIdToUnassign)
RE_ISATTRIBUTEVALUEEXISTS_SELECT=	select COUNT(*) from RE_OBECT_ATTR where ATTR_VALUE=?
RE_SAVEASSIGNOPERATORSTORULE_INSERT=	insert into RE_RULES_OPR_MAPPING (RULES_OPERATOR_ID,RULE_ID,OPERATOR_ID) values (RULES_OPR_MAPPING_PK_SQ.NEXTVAL,?,?)
RE_ISOPERATORNAMEEXISTS_SELECT=	select COUNT(OPERATOR_NAME) from RE_OPERATOR where OPERATOR_NAME=?
RE_ISOPERATORVALUEEXISTS_SELECT=	select COUNT(OPERATOR_VALUE) from RE_OPERATOR where OPERATOR_VALUE=?
RE_FETCHOPERATORSALLOWEDFORSUBRULE_SELECT=	select som.OPERATOR_ID,opr.OPERATOR_NAME,opr.OPERATOR_VALUE from RE_SUBRULE_OPR_MAPPING som join RE_OPERATOR opr on som.OPERATOR_ID = opr.OPERATOR_ID  where som.SUBRULE_ID =?
RE_SAVEASSIGNOPERATORSTOSUBRULE_DELETE=	delete from RE_SUBRULE_OPR_MAPPING where SUBRULE_ID =:subruleId AND OPERATOR_ID IN (:operatorIdsUnassigned)
RE_SAVEASSIGNOPERATORSTOSUBRULE_INSERT=	insert into RE_SUBRULE_OPR_MAPPING values(SUBRULE_OPR_MAPPING_PK_SQ.NEXTVAL,?,?)
RE_OPERATORNAMESINSUBRULELOGIC_SELECT=	select opr.OPERATOR_NAME     from RE_SUBRULE_OPR_MAPPING som join RE_SUBRULE_LOGIC sl     on sl.SUBRULES_OPERATOR_ID=som.SUBRULE_OPERATOR_ID     and sl.SUBRULE_ID=som.SUBRULE_ID     join RE_OPERATOR opr on som.OPERATOR_ID=opr.OPERATOR_ID     where som.SUBRULE_ID=:subruleId and som.OPERATOR_ID IN (:operatorIds)
RE_GETRULESFOROPERATOR_SELECT=	select r.RULE_NAME    from RE_RULES r join RE_RULES_OPR_MAPPING ro    on r.RULE_ID=ro.RULE_ID    where ro.OPERATOR_ID=?
RE_GETSUBRULESFOROPERATOR_SELECT=	select s.SUBRULE_NAME    from RE_SUBRULE s join RE_SUBRULE_OPR_MAPPING so    on s.SUBRULE_ID=so.SUBRULE_ID    where so.OPERATOR_ID=?
RE_FETCHOPERATORSASSIGNEDTORULE_SELECT=	select opr.OPERATOR_NAME from RE_RULES_OPR_MAPPING ropm       left outer join RE_RULE_LOGIC rl on ropm.RULES_OPERATOR_ID = rl.RULE_OPERATOR_MAP_ID       left outer join RE_OPERATOR opr on ropm.OPERATOR_ID = opr.OPERATOR_ID       where ropm.OPERATOR_ID in (:operatorIds) and rl.RULE_ID=:ruleId
RE_INSERTINTORULES_INSERT=	INSERT into RE_RULES (RULE_ID, RULE_NAME, RULE_DESCRIPTION, ACTIVE, EXE_ORDER,RETURN_VALUE,MODEL_ID) VALUES(RE_RULES_PK_SQ.NEXTVAL,?,?,?,?,?,?)
RE_UPDATERULE_UPDATE=	UPDATE RE_RULES SET RULE_NAME=?,RULE_DESCRIPTION=?,ACTIVE=?,RETURN_VALUE=?,EXE_ORDER=? WHERE RULE_ID=?
RE_DELETEFROMRULES_DELETE=	DELETE FROM RE_RULES WHERE RULE_ID=?
RE_FETCHALLRULES_SELECT=select RULE_ID,RULE_NAME,RULE_DESCRIPTION,ACTIVE,RETURN_VALUE,EXE_ORDER,MODEL_ID from RE_RULES order by EXE_ORDER
RE_FETCHRULE_SELECTRULELOGIC=	SELECT rl.RULE_LOGIC_ID,rl.RULE_SUBRULE_MAP_ID,rl.RULE_OPERATOR_MAP_ID,rl.ORDER_NO,      sr.SUBRULE_NAME,sr.SUBRULE_DESCRIPTION,sr.DEFAULT_VALUE ,opr.OPERATOR_NAME,opr.OPERATOR_VALUE ,      sr.SUBRULE_ID      FROM        RE_RULE_LOGIC rl left outer join RE_RULES r on rl.RULE_ID = r.RULE_ID      left outer join RE_RULES_SUBRULE_MAPPING rulesSrm on rl.RULE_SUBRULE_MAP_ID = rulesSrm.RULE_SUBRULE_ID      left outer join RE_RULES_OPR_MAPPING rulesOprm on rl.RULE_OPERATOR_MAP_ID = rulesOprm.RULES_OPERATOR_ID       left outer join RE_SUBRULE sr on rulesSrm.SUBRULE_ID = sr.SUBRULE_ID       left outer join RE_OPERATOR opr on  rulesOprm.OPERATOR_ID = opr.OPERATOR_ID      where r.RULE_ID=? order by rl.ORDER_NO
RE_FETCHRULE_SELECTRULE=	select RULE_ID,RULE_NAME,RULE_DESCRIPTION,ACTIVE,RETURN_VALUE,EXE_ORDER,MODEL_ID from RE_RULES where RULE_ID =?
RE_INSERTINTOATTRIBUTE_INSERT=	INSERT INTO RE_OBECT_ATTR(ATTR_ID,ATTR_NAME,ATTR_VALUE,MODEL_ID) VALUES(ATTR_PK_SQ.NEXTVAL,?,?,?) 
RE_FETCHALLATTRIBUTES_SELECT=	SELECT ATTR_ID,ATTR_NAME,ATTR_VALUE,MODEL_ID FROM RE_OBECT_ATTR WHERE MODEL_ID=? order by ATTR_NAME
RE_FETCHALLATTRIBUTES_ALL=	SELECT ATTR_ID,ATTR_NAME,ATTR_VALUE,MODEL_ID FROM RE_OBECT_ATTR order by ATTR_NAME
RE_FETCHATTRIBUTE_SELECT=	SELECT ATTR_ID,ATTR_NAME,ATTR_VALUE FROM RE_OBECT_ATTR WHERE ATTR_ID=?
RE_DELETEATTRIBUTE_DELETE=	DELETE  FROM RE_OBECT_ATTR WHERE ATTR_ID=?
RE_UPDATEATTRIBUTE_UPDATE=UPDATE RE_OBECT_ATTR SET ATTR_NAME\=?,ATTR_VALUE\=?, WHERE ATTR_ID\=? 
RE_FETCHRULEBYNAME_SELECTRULELOGIC=SELECT rl.RULE_LOGIC_ID,rl.RULE_SUBRULE_MAP_ID,rl.RULE_OPERATOR_MAP_ID,rl.ORDER_NO,       sr.SUBRULE_NAME,sr.SUBRULE_DESCRIPTION,sr.DEFAULT_VALUE ,opr.OPERATOR_NAME,opr.OPERATOR_VALUE FROM      RE_RULE_LOGIC rl left outer join RE_RULES r on rl.RULE_ID \= r.RULE_ID      left outer join RE_RULES_SUBRULE_MAPPING rulesSrm on rl.RULE_SUBRULE_MAP_ID \= rulesSrm.RULE_SUBRULE_ID      left outer join RE_RULES_OPR_MAPPING rulesOprm on rl.RULE_OPERATOR_MAP_ID \= rulesOprm.RULES_OPERATOR_ID       left outer join RE_SUBRULE sr on rulesSrm.SUBRULE_ID \= sr.SUBRULE_ID       left outer join RE_OPERATOR opr on  rulesOprm.OPERATOR_ID \= opr.OPERATOR_ID      where r.RULE_ID\=? order by rl.ORDER_NO 
RE_FETCHRULEBYNAME_SELECT=	select RULE_ID,RULE_NAME,RULE_DESCRIPTION,ACTIVE,RETURN_VALUE,EXE_ORDER,MODEL_ID from RE_RULES where RULE_NAME =?
RE_DELETERULELOGIC_DELETE=	Delete from RE_RULE_LOGIC where RULE_ID= ?
RE_INSERTRULELOGIC_INSERT=	insert into RE_RULE_LOGIC (RULE_LOGIC_ID,RULE_ID,RULE_SUBRULE_MAP_ID,RULE_OPERATOR_MAP_ID,ORDER_NO)     values(RULE_LOGIC_PK_SQ.NEXTVAL,?,?,?,?)
RE_FETCHATTRIBUTESALLOWEDFORSUBRULE_SELECT=	select sam.ATTR_ID,atr.ATTR_NAME,atr.ATTR_VALUE from RE_SUBRULE_ATTR_MAPPING sam join RE_OBECT_ATTR atr on sam.ATTR_ID = atr.ATTR_ID  where sam.SUBRULE_ID =?
RE_FETCHRULENAMESFORSUBRULE_SELECT=	select r.RULE_NAME from RE_RULES r join RE_RULES_SUBRULE_MAPPING rsm      on r.RULE_ID=rsm.RULE_ID where rsm.SUBRULE_ID=?
RE_DELETESUBRULELOGIC_DELETE=	delete from RE_SUBRULE_LOGIC where SUBRULE_ID = ?
RE_SAVEASSIGNSUBRULESTORULE_DELETE=	Delete from RE_RULES_SUBRULE_MAPPING where RULE_ID =:ruleId and SUBRULE_ID in (:subRuleIds)
RE_FETCHALLSUBRULES_SELECTSUBRULES=	SELECT sr.SUBRULE_ID,sr.SUBRULE_NAME,sr.SUBRULE_DESCRIPTION,sr.DEFAULT_VALUE,sr.ACTIVE     FROM RE_RULES_SUBRULE_MAPPING  rsrm join RE_SUBRULE sr  on rsrm.SUBRULE_ID =sr.SUBRULE_ID      where rsrm.RULE_ID=? order by sr.SUBRULE_NAME
RE_INSERTSUBRULELOGIC_INSERT=	insert into RE_SUBRULE_LOGIC (SUBRULE_LOGIC_ID,SUBRULE_ID,SUBRULES_OPERATOR_ID,SUBRULE_ATTR_ID,ORDER_NO)       values (SUBRULE_LOGIC_PK_SQ.NEXTVAL,?,?,?,?) 
RE_FETCHALLRULESUBRULEMAPPING_SELECT=	select rsrm.RULE_SUBRULE_ID,rsrm.RULE_ID,rsrm.SUBRULE_ID, sr.SUBRULE_NAME,sr.SUBRULE_DESCRIPTION from RE_RULES_SUBRULE_MAPPING rsrm join RE_SUBRULE sr on rsrm.SUBRULE_ID = sr.SUBRULE_ID
RE_FETCHALLRULESUBRULEMAPPING_SELECTBYRULE=	select rsrm.RULE_SUBRULE_ID,rsrm.RULE_ID,rsrm.SUBRULE_ID , sr.SUBRULE_NAME,sr.SUBRULE_DESCRIPTION from RE_RULES_SUBRULE_MAPPING rsrm join RE_SUBRULE sr on rsrm.SUBRULE_ID = sr.SUBRULE_ID where rsrm.RULE_ID=?
RE_FETCHALLATTRIBUTEMAPPING_SELECT=	select sattrMap.SUBRULE_ATTR_ID,sattrMap.SUBRULE_ID,sattrMap.ATTR_ID,      attr.ATTR_ID,attr.ATTR_NAME,attr.ATTR_VALUE       from RE_SUBRULE_ATTR_MAPPING sattrMap      left outer join RE_OBECT_ATTR attr on sattrMap.ATTR_ID = attr.ATTR_ID      where SUBRULE_ID=?
RE_FETCHALLOPERATORMAPPING_SELECT=	select oprMap.SUBRULE_OPERATOR_ID,oprMap.SUBRULE_ID,oprMap.OPERATOR_ID,      opr.OPERATOR_ID,opr.OPERATOR_NAME,opr.OPERATOR_VALUE       from RE_SUBRULE_OPR_MAPPING oprMap      left outer join RE_OPERATOR opr on oprMap.OPERATOR_ID = opr.OPERATOR_ID      where SUBRULE_ID =?
RE_FETCHRULEOPERATORMAPPINGFORRULE_SELECTSUBRULE=	select rsrmap.RULE_SUBRULE_ID ,rsrmap.RULE_ID,rsrmap.SUBRULE_ID,      sr.SUBRULE_NAME,sr.SUBRULE_DESCRIPTION      from RE_RULES_SUBRULE_MAPPING rsrmap join RE_SUBRULE sr  on rsrmap.SUBRULE_ID = sr.SUBRULE_ID where rsrmap.RULE_ID=?
RE_FETCHSUBRULEBYNAME_SELECT=	SELECT SUBRULE_ID,SUBRULE_NAME,SUBRULE_DESCRIPTION,DEFAULT_VALUE,ACTIVE FROM RE_SUBRULE WHERE SUBRULE_NAME=?
RE_SUBRULESUSEDINRULESLOGIC_SELECT=	Select srl.SUBRULE_NAME,rsrm.SUBRULE_ID ,rl.RULE_ID from RE_RULES_SUBRULE_MAPPING rsrm       left outer join RE_RULE_LOGIC rl on  rl.RULE_SUBRULE_MAP_ID=rsrm.RULE_SUBRULE_ID        left outer join RE_SUBRULE srl on rsrm.SUBRULE_ID = srl.SUBRULE_ID        where rsrm.SUBRULE_ID in (:subRuleIds) and rl.RULE_ID=:ruleId
RE_SAVEASSIGNSUBRULESTORULE_INSERT=	insert into RE_RULES_SUBRULE_MAPPING (RULE_SUBRULE_ID,RULE_ID,SUBRULE_ID)      values (RULES_SUBRULE_MAPPING_PK_SQ.NEXTVAL, ?, ?)
RE_FETCHSUBRULE_SELECTLOGIC=	SELECT srl.SUBRULE_LOGIC_ID,srl.SUBRULE_ID,srl.SUBRULES_OPERATOR_ID,srl.SUBRULE_ATTR_ID,srl.ORDER_NO,           objattr.ATTR_ID,objattr.ATTR_NAME,objattr.ATTR_VALUE,           opr.OPERATOR_ID,opr.OPERATOR_NAME,opr.OPERATOR_VALUE            from RE_SUBRULE_LOGIC srl            left outer join RE_SUBRULE sr on srl.SUBRULE_ID = sr.SUBRULE_ID            left outer join RE_SUBRULE_ATTR_MAPPING sram on srl.SUBRULE_ATTR_ID = sram.SUBRULE_ATTR_ID            left outer join RE_SUBRULE_OPR_MAPPING soprm on srl.SUBRULES_OPERATOR_ID = soprm.SUBRULE_OPERATOR_ID            left outer join RE_OBECT_ATTR objattr on sram.ATTR_ID = objattr.ATTR_ID            left outer join RE_OPERATOR opr on soprm.OPERATOR_ID = opr.OPERATOR_ID            where sr.SUBRULE_ID=?  order by  srl.ORDER_NO
RE_FETCHSUBRULE_SELECT=SELECT SUBRULE_ID,SUBRULE_NAME,SUBRULE_DESCRIPTION,DEFAULT_VALUE,ACTIVE,MODEL_ID FROM RE_SUBRULE WHERE SUBRULE_ID\=? 
RE_FETCHALLSUBRULES_SELECT=	SELECT SUBRULE_ID,SUBRULE_NAME,SUBRULE_DESCRIPTION,DEFAULT_VALUE,ACTIVE,MODEL_ID FROM RE_SUBRULE order by SUBRULE_NAME
RE_DELETESUBRULE_DELETE	=DELETE FROM RE_SUBRULE WHERE SUBRULE_ID=?
RE_UPDATESUBRULE_UPDATE=	UPDATE RE_SUBRULE SET SUBRULE_NAME=?,SUBRULE_DESCRIPTION=?,DEFAULT_VALUE=?,ACTIVE=? WHERE SUBRULE_ID=?
RE_INSERTSUBRULE_INSERT=	INSERT INTO RE_SUBRULE(SUBRULE_ID,SUBRULE_NAME,SUBRULE_DESCRIPTION,DEFAULT_VALUE,ACTIVE,MODEL_ID) VALUES(SUBRULES_PK_SQ.NEXTVAL,?,?,?,?,?)
RE_ISEXECUTIONORDEREXISTS_SELECT=	Select RULE_ID from RE_RULES where EXE_ORDER = ?
RE_ISATTRIBUTENAMEEXISTS_SELECT=	select COUNT(*)  from RE_OBECT_ATTR where ATTR_NAME=?
RE_FETCHALLSUBRULES_MODEL_ID=	SELECT SUBRULE_ID,SUBRULE_NAME,SUBRULE_DESCRIPTION,DEFAULT_VALUE,ACTIVE,MODEL_ID FROM RE_SUBRULE WHERE MODEL_ID=? order by SUBRULE_NAME
RE_INSERTINTOMODEL_INSERT=INSERT INTO RE_MODEL_CLASS(MODEL_ID,MODEL_CLASS_NAME) VALUES(MODEL_CLASS_PK_SQ.NEXTVAL,?)
RE_FETCHALLMODEL_SELECT=SELECT MODEL_ID,MODEL_CLASS_NAME FROM RE_MODEL_CLASS
RE_FETCHMODEL_SELECT=SELECT MODEL_ID,MODEL_CLASS_NAME FROM RE_MODEL_CLASS WHERE MODEL_ID=?
RE_DELETEMODEL_DELETE=DELETE FROM RE_MODEL_CLASS WHERE MODEL_ID=?
RE_UPDATEMODEL_UPDATE=UPDATE RE_MODEL_CLASS SET MODEL_CLASS_NAME=? WHERE MODEL_ID=?